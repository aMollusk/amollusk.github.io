{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/constants/styles.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["IndexPage","args","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","MQ_MEDIUM","mediaQuery","size","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Header","siteTitle","core_browser_esm","style","margin","display","padding","gatsby_browser_entry","color","textDecoration","defaultProps","main","css","_css","width","paddingRight","Layout","react_default","a","Fragment","header","site","siteMetadata","paddingTop","_755544856","node","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_5__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_1__","array","arrayOf"],"mappings":"8IAeeA,UATG,SAAAC,GAChB,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAC5BL,OAAAC,EAAA,EAAAD,CAACM,EAAA,KAAD,CAAMC,GAAG,WAAT,uoBCEN,IAAMC,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBZ,OAAAC,EAAA,EAAAD,CAACQ,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDf,OAAAC,EAAA,EAAAD,CAAA,uCAaf,SAASmB,IACP,MAAM,IAAIC,MACR,gVATJT,EAAYU,UAAY,CACtBN,KAAMO,IAAUC,OAChBP,MAAOM,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAMC,EAAa,SAAAC,GAAI,4BAA0BA,EAA1B,OAGrBF,GADsBC,EAAW,KACrBA,EAAW,MACZA,EAAW,yLCElBE,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOnC,IAAMoC,cAAcC,IAApB9C,OAAA+C,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBV,EAAiBjB,UAAY,CAC3BmB,SAAUlB,IAAU2B,MAAM,CACxBL,SAAUtB,IAAUE,OAAOC,aAC1BA,YAGUa,0ICjBTY,EAAS,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,UAAH,OACbnD,OAAAoD,EAAA,EAAApD,CAAA,UACEqD,MACE,IAKFrD,OAAAoD,EAAA,EAAApD,CAAA,OACEqD,MAAO,CACLC,OAAM,SACNC,QAAS,OACTC,QAAO,sBAGTxD,OAAAoD,EAAA,EAAApD,CAAA,MAAIqD,MAAO,CAAEC,OAAQ,IACnBtD,OAAAoD,EAAA,EAAApD,CAACyD,EAAA,KAAD,CACElD,GAAG,IACH8C,MAAO,CACLK,MAAK,QACLC,eAAc,SAGfR,OAOXD,EAAO7B,UAAY,CACjB8B,UAAW7B,IAAUE,QAGvB0B,EAAOU,aAAe,CACpBT,UAAS,IAGID,UClCTW,UAAOC,cAAGC,EAAA,CACdC,MAAO,OACPV,OAAM,SACNW,aAAY,SAEX9B,KAAY,CACX8B,aAAY,SANAF,GAAA,KAaVG,EAAS,SAAA3B,GAAA,IAAGrB,EAAHqB,EAAGrB,SAAH,OACblB,OAAAoD,EAAA,EAAApD,CAACyD,EAAA,YAAD,CACEzC,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACVf,OAAAoD,EAAA,EAAApD,CAAAmE,EAAAC,EAAAC,SAAA,KACErE,OAAAoD,EAAA,EAAApD,CAACsE,EAAD,CAAQnB,UAAWpC,EAAKwD,KAAKC,aAAapE,QAC1CJ,OAAAoD,EAAA,EAAApD,CAAA,OACEqD,MAAO,CAELoB,WAAY,GAEdX,IAAKD,GAEL7D,OAAAoD,EAAA,EAAApD,CAAA,YAAOkB,GACPlB,OAAAoD,EAAA,EAAApD,CAAA,kBArBRe,KAAA2D,KA4BFR,EAAO7C,UAAY,CACjBH,SAAUI,IAAUqD,KAAKlD,YAGZyC,8GCjDf,SAASU,EAATrC,GAA2D,IAA5CsC,EAA4CtC,EAA5CsC,YAAaC,EAA+BvC,EAA/BuC,KAAMC,EAAyBxC,EAAzBwC,KAAM1E,EAAmBkC,EAAnBlC,SAAUD,EAASmC,EAATnC,MAChD,OACEJ,OAAAC,EAAA,EAAAD,CAACgF,EAAA,YAAD,CACEhE,MAAOiE,EACPhE,OAAQ,SAAAF,GACN,IAAMmE,EACJL,GAAe9D,EAAKwD,KAAKC,aAAaK,YACxC,OACE7E,OAAAC,EAAA,EAAAD,CAACmF,EAAAf,EAAD,CACEgB,eAAgB,CACdN,QAEF1E,MAAOA,EACPiF,cAAa,QAAUtE,EAAKwD,KAAKC,aAAapE,MAC9C2E,KAAM,CACJ,CACEO,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASnF,GAEX,CACEoF,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASxE,EAAKwD,KAAKC,aAAaiB,QAElC,CACEH,KAAI,gBACJC,QAASnF,GAEX,CACEkF,KAAI,sBACJC,QAASL,IAGVQ,OACCrF,EAASsF,OAAS,EACd,CACEL,KAAI,WACJC,QAASlF,EAASuF,KAAT,OAEX,IAELF,OAAOX,MAtDlBhE,KAAA8E,IA8DJjB,EAAIhB,aAAe,CACjBkB,KAAI,KACJC,KAAM,GACN1E,SAAU,IAGZuE,EAAIvD,UAAY,CACdwD,YAAavD,IAAUE,OACvBsD,KAAMxD,IAAUE,OAChBuD,KAAMzD,IAAUwE,MAChBzF,SAAUiB,IAAUyE,QAAQzE,IAAUE,QACtCpB,MAAOkB,IAAUE,OAAOC,YAGXmD,MAEf,IAAMK,EAAY","file":"component---src-pages-index-js-321edf68476105d0cb63.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage = args => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={[`qantas`, `application`, `react`]} />\n      <Link to=\"/agile/\">Go to playbook</Link>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const mediaQuery = size => `@media (min-width: ${size}px)`;\n\nexport const MQ_SMALL = mediaQuery(576),\n  MQ_MEDIUM = mediaQuery(768),\n  MQ_LARGE = mediaQuery(992);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={\n      {\n        // marginBottom: `1.45rem`\n      }\n    }\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        display: \"none\",\n        padding: `1.45rem 1.0875rem`\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ``\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { css } from \"@emotion/core\";\nimport { MQ_MEDIUM } from \"../constants/styles\";\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst main = css({\n  width: \"100%\",\n  margin: `0 auto`,\n  paddingRight: `64px`,\n\n  [MQ_MEDIUM]: {\n    paddingRight: `164px`\n    // background: \"#323232\",\n    // width: \"1284px\"\n    // flexShrink: 0\n  }\n});\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            // padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0\n          }}\n          css={main}\n        >\n          <main>{children}</main>\n          <footer />\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}