{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/testing/characteristics","title":"Characteristics of a Good Unit Test"}}},{"node":{"frontmatter":{"path":"/testing/test-data","title":"Test Data"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-checklist","title":"Test-Driven Development Checklist"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"path":"/standards/logging","title":"Logging"}}},{"node":{"frontmatter":{"path":"/standards/ready","title":"Definitions of Ready"}}},{"node":{"frontmatter":{"path":"/standards/readme","title":"README"}}},{"node":{"frontmatter":{"path":"/standards","title":"Standards"}}},{"node":{"frontmatter":{"path":"/standards/design-review","title":"Technical Design Review"}}},{"node":{"frontmatter":{"path":"/standards/version-control","title":"Version Control"}}},{"node":{"frontmatter":{"path":"/standards/versioning","title":"Versioning"}}}]},"markdownRemark":{"html":"<h1>CI/CD</h1>\n<table>\n<thead>\n<tr>\n<th>REACH</th>\n<th>ALL</th>\n<th>BY DIVISION</th>\n<th>BY STACK</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>LEADS</td>\n<td>Paul Keen</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/an-introduction-to-continuous-integration-delivery-and-deployment\">Continuous integration, delivery, and\ndeployment</a>,\nknown collectively as CI/CD, is an integral part of modern development\nintended to reduce errors during integration and deployment while\nincreasing project velocity. CI/CD is a philosophy and set of practices\noften augmented by robust tooling that emphasize automated testing at\neach stage of the software pipeline. By incorporating these ideas into\nyour practice, you can reduce the time required to integrate changes for\na release and thoroughly test each change before moving it into\nproduction.</p>\n<p>At Qantas:</p>\n<ol>\n<li>\n<p><a href=\"https://www.gocd.org/\">Go</a> is used as the CI Pipeline</p>\n</li>\n<li>\n<p>All builds must use the CI/CD Pipeline</p>\n</li>\n<li>\n<p>Access to the Pipeline configuration is managed through trusted AD</p>\n<blockquote>\n<p>user groups.</p>\n</blockquote>\n</li>\n<li>\n<p>All builds must be commended by a pull request. No pull request no</p>\n<blockquote>\n<p>build</p>\n</blockquote>\n</li>\n<li>\n<p>Must have a build break practice.</p>\n</li>\n<li>\n<p>Never deploy a red build.</p>\n</li>\n</ol>\n<p>Martin Fowlers CI/CD Principals</p>\n<ol>\n<li>\n<p>Maintain a Single Source Repository.</p>\n</li>\n<li>\n<p>Automate the Build</p>\n</li>\n<li>\n<p>Make Your Build Self-Testing</p>\n</li>\n<li>\n<p>Everyone Commits To the Mainline Every Day</p>\n</li>\n<li>\n<p>Every Commit Should Build the Mainline on an Integration Machine</p>\n</li>\n<li>\n<p>Fix Broken Builds Immediately</p>\n</li>\n<li>\n<p>Keep the Build Fast</p>\n</li>\n<li>\n<p>Test in a Clone of the Production Environment</p>\n</li>\n<li>\n<p>Make it Easy for Anyone to Get the Latest Executable</p>\n</li>\n<li>\n<p>Everyone can see what's happening</p>\n</li>\n<li>\n<p>Automate Deployment</p>\n</li>\n</ol>\n<p>More Info\n<a href=\"https://martinfowler.com/articles/continuousIntegration.html\">https://martinfowler.com/articles/continuousIntegration.html</a></p>","frontmatter":{"title":"CI/CD","path":"/standards/ci-cd"}},"allNavYaml":{"edges":[{"node":{"title":"Purpose","id":"purpose","items":null}},{"node":{"title":"Conventions Used","id":"conventions","items":null}},{"node":{"title":"Agile","id":"agile","items":[{"id":"bugs","title":"Bugs"},{"id":"confluence","title":"Confluence"},{"id":"jira","title":"Jira"}]}},{"node":{"title":"Principles","id":"principles","items":null}},{"node":{"title":"Standards","id":"standards","items":[{"id":"definitions","title":"Definitions of Done"},{"id":"ready","title":"Definitions of Ready"},{"id":"version-control","title":"Version Control"},{"id":"code-review","title":"Code Review/Pull Requests"},{"id":"design-review","title":"Technical Design Review"},{"id":"code-style","title":"Code Style"},{"id":"design-principles","title":"Design Principles"},{"id":"cloud","title":"Cloud"},{"id":"ci-cd","title":"CI/CD"},{"id":"versioning","title":"Versioning"},{"id":"api-standards","title":"API Standards"},{"id":"logging","title":"Logging"},{"id":"readme","title":"README"}]}},{"node":{"title":"Design Implementations","id":"design-implementations","items":[{"id":"application-info","title":"Application Info"}]}},{"node":{"title":"Security","id":"security","items":[{"id":"secure-code","title":"Secure Code Standards"},{"id":"static-code","title":"Static Code Analysis"},{"id":"software-composition","title":"Software Composition Analysis"},{"id":"credentials","title":"Credentials"},{"id":"security-training","title":"Security training"}]}},{"node":{"title":"Testing","id":"testing","items":[{"id":"test-driven-development","title":"Test-Driven Development"},{"id":"characteristics","title":"Characteristics of a Good Unit Test"},{"id":"test-driven-checklist","title":"Test-Driven Development Checklist"},{"id":"test-data","title":"Test Data"}]}},{"node":{"title":"Operational Excellence","id":"operational-excellence","items":[{"id":"ceremonies","title":"Ceremonies"},{"id":"standups","title":"Stand-ups"},{"id":"guilds","title":"Guilds"}]}},{"node":{"title":"People","id":"people","items":null}},{"node":{"title":"Software Engineering Checklist","id":"software-engineering-checklist","items":null}}]}},"pageContext":{"section":"playbook"}}