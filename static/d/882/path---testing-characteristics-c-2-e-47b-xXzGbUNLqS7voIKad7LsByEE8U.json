{"data":{"markdownRemark":{"html":"<h1>Characteristics of a Good Unit Test</h1>\n<p>A good unit test has the following characteristics:</p>\n<ul>\n<li>\n<p>Runs fast, runs fast, runs fast. If the tests are slow, they will</p>\n<blockquote>\n<p>not be run often.</p>\n</blockquote>\n</li>\n<li>\n<p>Separates or simulates environmental dependencies such as databases,</p>\n<blockquote>\n<p>file systems, networks, queues, and so on. Tests that exercise\nthese will not run fast, and a failure does not give meaningful\nfeedback about what the problem actually is.</p>\n</blockquote>\n</li>\n<li>\n<p>Is very limited in scope. If the test fails, it's obvious where to</p>\n<blockquote>\n<p>look for the problem. Use few Assert calls so that the offending\ncode is obvious. It's important to only test one thing in a\nsingle test.</p>\n</blockquote>\n</li>\n<li>\n<p>Runs and passes in isolation. If the tests require special</p>\n<blockquote>\n<p>environmental setup or fail unexpectedly, then they are not good\nunit tests. Change them for simplicity and reliability. Tests\nshould run and pass on any machine. The \"works on my box\" excuse\ndoesn't work.</p>\n</blockquote>\n</li>\n<li>\n<p>Often uses stubs and mock objects. If the code being tested</p>\n<blockquote>\n<p>typically calls out to a database or file system, these\ndependencies must be simulated, or mocked. These dependencies will\nordinarily be abstracted away by using interfaces.</p>\n</blockquote>\n</li>\n<li>\n<p>Clearly reveals its intention. Another developer can look at the</p>\n<blockquote>\n<p>test and understand what is expected of the production code.</p>\n</blockquote>\n</li>\n</ul>\n<p>Reference:\n<a href=\"https://msdn.microsoft.com/en-us/library/aa730844(v=vs.80).aspx\">https://msdn.microsoft.com/en-us/library/aa730844(v=vs.80).aspx</a></p>","frontmatter":{"title":"Characteristics of a Good Unit Test","path":"/testing/characteristics"}},"allNavYaml":{"edges":[{"node":{"title":"Purpose","id":"purpose","items":null}},{"node":{"title":"Conventions Used","id":"conventions","items":null}},{"node":{"title":"Agile","id":"agile","items":[{"id":"bugs","title":"Bugs"},{"id":"confluence","title":"Confluence"},{"id":"jira","title":"Jira"}]}},{"node":{"title":"Principles","id":"principles","items":null}},{"node":{"title":"Standards","id":"standards","items":[{"id":"definitions","title":"Definitions of Done"},{"id":"ready","title":"Definitions of Ready"},{"id":"version-control","title":"Version Control"},{"id":"code-review","title":"Code Review/Pull Requests"},{"id":"design-review","title":"Technical Design Review"},{"id":"code-style","title":"Code Style"},{"id":"design-principles","title":"Design Principles"},{"id":"cloud","title":"Cloud"},{"id":"ci-cd","title":"CI/CD"},{"id":"versioning","title":"Versioning"},{"id":"api-standards","title":"API Standards"},{"id":"logging","title":"Logging"},{"id":"readme","title":"README"}]}},{"node":{"title":"Design Implementations","id":"design-implementations","items":[{"id":"application-info","title":"Application Info"}]}},{"node":{"title":"Security","id":"security","items":[{"id":"secure-code","title":"Secure Code Standards"},{"id":"static-code","title":"Static Code Analysis"},{"id":"software-composition","title":"Software Composition Analysis"},{"id":"credentials","title":"Credentials"},{"id":"security-training","title":"Security training"}]}},{"node":{"title":"Testing","id":"testing","items":[{"id":"test-driven-development","title":"Test-Driven Development"},{"id":"characteristics","title":"Characteristics of a Good Unit Test"},{"id":"test-driven-checklist","title":"Test-Driven Development Checklist"},{"id":"test-data","title":"Test Data"}]}},{"node":{"title":"Operational Excellence","id":"operational-excellence","items":[{"id":"ceremonies","title":"Ceremonies"},{"id":"standups","title":"Stand-ups"},{"id":"guilds","title":"Guilds"}]}},{"node":{"title":"People","id":"people","items":null}},{"node":{"title":"Software Engineering Checklist","id":"software-engineering-checklist","items":null}}]}},"pageContext":{"section":"playbook"}}