{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/testing/characteristics","title":"Characteristics of a Good Unit Test"}}},{"node":{"frontmatter":{"path":"/testing/test-data","title":"Test Data"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-checklist","title":"Test-Driven Development Checklist"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"path":"/standards/ready","title":"Definitions of Ready"}}},{"node":{"frontmatter":{"path":"/standards/readme","title":"README"}}},{"node":{"frontmatter":{"path":"/standards","title":"Standards"}}},{"node":{"frontmatter":{"path":"/standards/design-review","title":"Technical Design Review"}}},{"node":{"frontmatter":{"path":"/standards/version-control","title":"Version Control"}}},{"node":{"frontmatter":{"path":"/standards/versioning","title":"Versioning"}}}]},"markdownRemark":{"html":"<h1>Code Reviews/Pull Requests</h1>\n<p>All production code needs to be reviewed via a pull request. Code\nreviews are classless: seniority is not required for a peer review\nalthough repository ownership can mandate approver authority.</p>\n<p>The aim of pull requests are to:</p>\n<ul>\n<li>\n<p>Catch major defects before they are introduced into the existing</p>\n<blockquote>\n<p>code base</p>\n</blockquote>\n</li>\n<li>\n<p>Discuss architectural improvements and provide guidance for changes</p>\n</li>\n<li>\n<p>Look for secure coding practices</p>\n</li>\n<li>\n<p>Establish and follow coding standards</p>\n</li>\n<li>\n<p>Give kudos for great work</p>\n</li>\n<li>\n<p>Review Unit Tests</p>\n</li>\n<li>\n<p>Learn from other developers</p>\n</li>\n<li>\n<p>Cross Skill yourself</p>\n</li>\n</ul>\n<h3>Pull Request Social Contract</h3>\n<p>Before each review, the <a href=\"https://www.google.com/url?sa=t&#x26;rct=j&#x26;q=&#x26;esrc=s&#x26;source=web&#x26;cd=3&#x26;cad=rja&#x26;uact=8&#x26;ved=2ahUKEwjk6-yugKjdAhVUdt4KHbVABvsQFjACegQIBRAK&#x26;url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FSocial_contract&#x26;usg=AOvVaw00zAPlb_lk_T-jSFCMPe8L\">Social\nContract</a>\nshould be considered:</p>\n<ul>\n<li>\n<p>We respect each other at all times</p>\n</li>\n<li>\n<p>We assume good intent</p>\n</li>\n<li>\n<p>Comments are contextual; focused only on the code</p>\n</li>\n<li>\n<p>Every comment should be addressed, never ignored</p>\n</li>\n<li>\n<p>Every peer review is an opportunity of collective learning and</p>\n<blockquote>\n<p>collaboration</p>\n</blockquote>\n</li>\n</ul>\n<h3>Pull Request Preparation</h3>\n<p>Pull Requests should meet the following criteria:</p>\n<ul>\n<li>\n<p>Should have description of changes</p>\n</li>\n<li>\n<p>Pull requests should be as small as possible with limited numbers of</p>\n<blockquote>\n<p>scope changes</p>\n</blockquote>\n</li>\n<li>\n<p>Build must be green and passed tests</p>\n</li>\n<li>\n<p>Reviewers should mark the pull request as \"need work\" even if they</p>\n<blockquote>\n<p>think the proposed changes are minor</p>\n</blockquote>\n</li>\n<li>\n<p>Should have description of changes in pull request</p>\n</li>\n<li>\n<p>Include all who are involved with that project</p>\n</li>\n<li>\n<p>Should squash unmeaningful commit messages before merge into master</p>\n</li>\n<li>\n<p>Include a brief on what the change is about.</p>\n</li>\n<li>\n<p>Should include unit test</p>\n</li>\n</ul>\n<h3>Pull Request Reviewers</h3>\n<p>The guidelines for Pull Request Reviewers are:</p>\n<ul>\n<li>\n<p>Mandatory 2 approvers (should not include members if pair</p>\n<blockquote>\n<p>programmed)</p>\n</blockquote>\n</li>\n<li>\n<p>Ideally 1 reviewer outside your team.</p>\n</li>\n<li>\n<p>Reviewed within two working days</p>\n</li>\n<li>\n<p>Requested refactoring changes should not change behaviour</p>\n</li>\n</ul>","frontmatter":{"title":"Code Review/Pull Requests","path":"/standards/code-review"}},"allNavYaml":{"edges":[{"node":{"title":"Purpose","id":"purpose","items":null}},{"node":{"title":"Conventions Used","id":"conventions","items":null}},{"node":{"title":"Agile","id":"agile","items":[{"id":"bugs","title":"Bugs"},{"id":"confluence","title":"Confluence"},{"id":"jira","title":"Jira"}]}},{"node":{"title":"Principles","id":"principles","items":null}},{"node":{"title":"Standards","id":"standards","items":[{"id":"definitions","title":"Definitions of Done"},{"id":"ready","title":"Definitions of Ready"},{"id":"version-control","title":"Version Control"},{"id":"code-review","title":"Code Review/Pull Requests"},{"id":"design-review","title":"Technical Design Review"},{"id":"code-style","title":"Code Style"},{"id":"design-principles","title":"Design Principles"},{"id":"cloud","title":"Cloud"},{"id":"ci-cd","title":"CI/CD"},{"id":"versioning","title":"Versioning"},{"id":"api-standards","title":"API Standards"},{"id":"logging","title":"Logging"},{"id":"readme","title":"README"}]}},{"node":{"title":"Design Implementations","id":"design-implementations","items":[{"id":"application-info","title":"Application Info"}]}},{"node":{"title":"Security","id":"security","items":[{"id":"secure-code","title":"Secure Code Standards"},{"id":"static-code","title":"Static Code Analysis"},{"id":"software-composition","title":"Software Composition Analysis"},{"id":"credentials","title":"Credentials"},{"id":"security-training","title":"Security training"}]}},{"node":{"title":"Testing","id":"testing","items":[{"id":"test-driven-development","title":"Test-Driven Development"},{"id":"characteristics","title":"Characteristics of a Good Unit Test"},{"id":"test-driven-checklist","title":"Test-Driven Development Checklist"},{"id":"test-data","title":"Test Data"}]}},{"node":{"title":"Operational Excellence","id":"operational-excellence","items":[{"id":"ceremonies","title":"Ceremonies"},{"id":"standups","title":"Stand-ups"},{"id":"guilds","title":"Guilds"}]}},{"node":{"title":"People","id":"people","items":null}},{"node":{"title":"Software Engineering Checklist","id":"software-engineering-checklist","items":null}}]}},"pageContext":{"section":"playbook"}}