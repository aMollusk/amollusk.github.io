{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/testing/characteristics","title":"Characteristics of a Good Unit Test"}}},{"node":{"frontmatter":{"path":"/testing/test-data","title":"Test Data"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-checklist","title":"Test-Driven Development Checklist"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"path":"/standards/logging","title":"Logging"}}},{"node":{"frontmatter":{"path":"/standards/ready","title":"Definitions of Ready"}}},{"node":{"frontmatter":{"path":"/standards/readme","title":"README"}}},{"node":{"frontmatter":{"path":"/standards","title":"Standards"}}},{"node":{"frontmatter":{"path":"/standards/design-review","title":"Technical Design Review"}}},{"node":{"frontmatter":{"path":"/standards/version-control","title":"Version Control"}}},{"node":{"frontmatter":{"path":"/standards/versioning","title":"Versioning"}}}]},"markdownRemark":{"html":"<h1>Bugs</h1>\n<p>Useful bug reports are ones that get bugs fixed. A useful bug report\nis...</p>\n<ol>\n<li>\n<p>Reproducible - If an Engineer can't see it or conclusively prove that it exists, the more likely it will be returned \"It works for me!\"</p>\n</li>\n<li>\n<p>Specific - The quicker the Engineer can trace down the issue to a specific problem, the more likely it'll be fixed expediently.</p>\n</li>\n</ol>\n<p>The goals of a bug report are to:</p>\n<ul>\n<li>\n<p>Pinpoint the bug</p>\n</li>\n<li>\n<p>Explain it to the QA team to triage</p>\n</li>\n</ul>\n<h3>How to write a good bug report</h3>\n<p>A good bug report should be brief but include the following information:</p>\n<p><strong>Summary</strong></p>\n<p>A brief summary of the issue</p>\n<p><strong>Steps to Reproduce</strong></p>\n<p>The goal of reproducible steps is to teach developer to recreate the bug\non his own system. It may be as simple as Load the attached test case in\nBrowser XYZ. A more complex case may involve multiple steps, such as:</p>\n<p><em>Step 1: Load the attached test case in Browser XYZ</em></p>\n<p><em>Step 2: Scroll to the bottom of the page</em></p>\n<p><em>Step 3: Click the link</em></p>\n<p>_Step 4: Page should show X but shows Y _</p>\n<p><strong>Expected Result</strong></p>\n<p>Detail what you expect the result to be.</p>\n<p><strong>Actual Result</strong></p>\n<p>A picture tells a thousand works and saves a lot of bug writing.\nAttached screenshots or record behaviour\n(e.g. <a href=\"http://recordit.co/\">http://recordit.co/</a>) to help\nquickly triage the issue.</p>\n<p><strong>Impact</strong></p>\n<p><strong>Scope:</strong></p>\n<p>A measure for how many people it affects, usually on a scale of 1 to 5.\nSo if everyone's completion rate is 5% higher than it should be, that\nwould be a 5, as it affects everyone. It's really good if you have some\ndescription for this, e.g.:</p>\n<ul>\n<li>\n<p>Level 1: Few reported cases</p>\n</li>\n<li>\n<p>Level 2: Affects a small sub-sector of users (&#x3C;20% or something)</p>\n</li>\n<li>\n<p>Level 3: Affects a medium sub-sector of users (20 - 50% ish)</p>\n</li>\n<li>\n<p>Level 4: Affects all posters OR all workers</p>\n</li>\n<li>\n<p>Level 5: Affects all users</p>\n</li>\n</ul>\n<p><strong>Severity:</strong></p>\n<p>A measure for how badly it affects the user and/or business. Potential\nscale could be:</p>\n<ul>\n<li>\n<p>Level 1: A typo (unlikely to have customer service impacts),</p>\n<blockquote>\n<p>duplicate notifications</p>\n</blockquote>\n</li>\n<li>\n<p>Level 2: Incorrect completion rate (some people might write in about</p>\n<blockquote>\n<p>it), discrepancy in task count</p>\n</blockquote>\n</li>\n<li>\n<p>Level 3: Something that is stopping people from messaging, making an</p>\n<blockquote>\n<p>offer, or assigning</p>\n</blockquote>\n</li>\n<li>\n<p>Level 4: Payments incorrectly processed, e.g. the bug from the other</p>\n<blockquote>\n<p>week</p>\n</blockquote>\n</li>\n<li>\n<p>Level 5: Whole site down/Armageddon</p>\n</li>\n</ul>\n<p>Under this, it's also important to note the impacts, for example:</p>\n<ul>\n<li>\n<p>Increased ticket volume</p>\n</li>\n<li>\n<p>Manual workaround uses up customer service time etc.</p>\n</li>\n<li>\n<p>Lost revenue</p>\n</li>\n<li>\n<p>Negative PR</p>\n</li>\n</ul>","frontmatter":{"title":"Bugs","path":"/agile/bugs"}},"allNavYaml":{"edges":[{"node":{"title":"Purpose","id":"purpose","items":null}},{"node":{"title":"Conventions Used","id":"conventions","items":null}},{"node":{"title":"Agile","id":"agile","items":[{"id":"bugs","title":"Bugs"},{"id":"confluence","title":"Confluence"},{"id":"jira","title":"Jira"}]}},{"node":{"title":"Principles","id":"principles","items":null}},{"node":{"title":"Standards","id":"standards","items":[{"id":"definitions","title":"Definitions of Done"},{"id":"ready","title":"Definitions of Ready"},{"id":"version-control","title":"Version Control"},{"id":"code-review","title":"Code Review/Pull Requests"},{"id":"design-review","title":"Technical Design Review"},{"id":"code-style","title":"Code Style"},{"id":"design-principles","title":"Design Principles"},{"id":"cloud","title":"Cloud"},{"id":"ci-cd","title":"CI/CD"},{"id":"versioning","title":"Versioning"},{"id":"api-standards","title":"API Standards"},{"id":"logging","title":"Logging"},{"id":"readme","title":"README"}]}},{"node":{"title":"Design Implementations","id":"design-implementations","items":[{"id":"application-info","title":"Application Info"}]}},{"node":{"title":"Security","id":"security","items":[{"id":"secure-code","title":"Secure Code Standards"},{"id":"static-code","title":"Static Code Analysis"},{"id":"software-composition","title":"Software Composition Analysis"},{"id":"credentials","title":"Credentials"},{"id":"security-training","title":"Security training"}]}},{"node":{"title":"Testing","id":"testing","items":[{"id":"test-driven-development","title":"Test-Driven Development"},{"id":"characteristics","title":"Characteristics of a Good Unit Test"},{"id":"test-driven-checklist","title":"Test-Driven Development Checklist"},{"id":"test-data","title":"Test Data"}]}},{"node":{"title":"Operational Excellence","id":"operational-excellence","items":[{"id":"ceremonies","title":"Ceremonies"},{"id":"standups","title":"Stand-ups"},{"id":"guilds","title":"Guilds"}]}},{"node":{"title":"People","id":"people","items":null}},{"node":{"title":"Software Engineering Checklist","id":"software-engineering-checklist","items":null}}]}},"pageContext":{"section":"playbook"}}