{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/conventions","title":"Conventions Used"}}},{"node":{"frontmatter":{"path":"/agile","title":"Agile"}}},{"node":{"frontmatter":{"path":"/agile/bugs","title":"Bugs"}}},{"node":{"frontmatter":{"path":"/operational-exellence/ceremonies","title":"Ceremonies"}}},{"node":{"frontmatter":{"path":"/agile/jira","title":"Jira"}}},{"node":{"frontmatter":{"path":"/agile/confluence","title":"Confluence"}}},{"node":{"frontmatter":{"path":"/people","title":"People"}}},{"node":{"frontmatter":{"path":"/operational-exellence/guilds","title":"Guilds"}}},{"node":{"frontmatter":{"path":"/operational-exellence","title":"Operational Excellence"}}},{"node":{"frontmatter":{"path":"/operational-exellence/standups","title":"Stand-ups"}}},{"node":{"frontmatter":{"path":"/software-eng-checklist","title":"Software Engineering Checklist"}}},{"node":{"frontmatter":{"path":"/principles","title":"Principles"}}},{"node":{"frontmatter":{"path":"/security/credentials","title":"Credentials"}}},{"node":{"frontmatter":{"path":"/security/secure-code","title":"Secure Code Standards"}}},{"node":{"frontmatter":{"path":"/security/security-training","title":"Security training"}}},{"node":{"frontmatter":{"path":"/security","title":"Security"}}},{"node":{"frontmatter":{"path":"/security/software-composition","title":"Software Composition Analysis"}}},{"node":{"frontmatter":{"path":"/security/static-code","title":"Static Code Analysis"}}},{"node":{"frontmatter":{"path":"/standards/api-standards","title":"API Standards"}}},{"node":{"frontmatter":{"path":"/standards/cloud","title":"Cloud"}}},{"node":{"frontmatter":{"path":"/standards/code-style","title":"Code Style"}}},{"node":{"frontmatter":{"path":"/standards/code-review","title":"Code Review/Pull Requests"}}},{"node":{"frontmatter":{"path":"/standards/ci-cd","title":"CI/CD"}}},{"node":{"frontmatter":{"path":"/standards/definitions","title":"Definitions of Done"}}},{"node":{"frontmatter":{"path":"/standards/design-principles","title":"Design Principles"}}},{"node":{"frontmatter":{"path":"/standards/logging","title":"Logging"}}},{"node":{"frontmatter":{"path":"/standards","title":"Standards"}}},{"node":{"frontmatter":{"path":"/standards/ready","title":"Definitions of Ready"}}},{"node":{"frontmatter":{"path":"/standards/design-review","title":"Technical Design Review"}}},{"node":{"frontmatter":{"path":"/standards/readme","title":"README"}}},{"node":{"frontmatter":{"path":"/standards/versioning","title":"Versioning"}}},{"node":{"frontmatter":{"path":"/standards/version-control","title":"Version Control"}}},{"node":{"frontmatter":{"path":"/testing/characteristics","title":"Characteristics of a Good Unit Test"}}},{"node":{"frontmatter":{"path":"/testing/test-data","title":"Test Data"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-checklist","title":"Test-Driven Development Checklist"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}}]},"markdownRemark":{"html":"<h1>Software Composition Analysis</h1>\n<p>Software Composition Analysis (SCA) allows you to identify third-party\nand open source components that have been integrated into all your\napplications. It informs you about the licenses for each of them an\nidentifies out-of-date libraries that should be upgraded or patched.</p>\n<p>As nearly all projects use some form of open source or third-party\nlibrary it is required for software to use an SCA solution. It is\nexpected that SCA forms part of your continuous integration build. Where\navailable, use SCA plugins to your IDE in order to identify library\nissues early in the development cycle.</p>\n<p>The default solution is to use either Veracode SourceClear or NexusIQ,\nany other solutions must be approved by the Cyber team.</p>","frontmatter":{"title":"Software Composition Analysis","path":"/security/software-composition"}}},"pageContext":{"section":"playbook"}}