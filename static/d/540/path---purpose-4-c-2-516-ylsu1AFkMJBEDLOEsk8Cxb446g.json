{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/software-engineering-checklist","title":"Software Engineering Checklist"}}},{"node":{"frontmatter":{"path":"/testing/characteristics","title":"Characteristics of a Good Unit Test"}}},{"node":{"frontmatter":{"path":"/testing/test-data","title":"Test Data"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-checklist","title":"Test-Driven Development Checklist"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}},{"node":{"frontmatter":{"path":"/standards/api-standards","title":"API Standards"}}},{"node":{"frontmatter":{"path":"/standards/ci-cd","title":"CI/CD"}}},{"node":{"frontmatter":{"path":"/standards/cloud","title":"Cloud"}}},{"node":{"frontmatter":{"path":"/standards/code-review","title":"Code Review/Pull Requests"}}},{"node":{"frontmatter":{"path":"/standards/code-style","title":"Code Style"}}},{"node":{"frontmatter":{"path":"/standards/definitions","title":"Definitions of Done"}}},{"node":{"frontmatter":{"path":"/standards/design-principles","title":"Design Principles"}}},{"node":{"frontmatter":{"path":"/standards/logging","title":"Logging"}}},{"node":{"frontmatter":{"path":"/standards/ready","title":"Definitions of Ready"}}},{"node":{"frontmatter":{"path":"/standards/readme","title":"README"}}},{"node":{"frontmatter":{"path":"/standards","title":"Standards"}}},{"node":{"frontmatter":{"path":"/standards/design-review","title":"Technical Design Review"}}},{"node":{"frontmatter":{"path":"/standards/version-control","title":"Version Control"}}},{"node":{"frontmatter":{"path":"/standards/versioning","title":"Versioning"}}}]},"markdownRemark":{"html":"<h1>Purpose</h1>\n<p>The purpose of the Software Engineering Playbook is to share the way of the working amongst the various development teams across the Qantas Group. Whilst our default view is to standardise amongst teams, we embrace diversity in thinking and approach.</p>\n<p>The Playbook should be thought of as a framework and not a standard. Teams should default to the Playbook but select to opt out where you believe the team can justify the need to be different.</p>","frontmatter":{"title":"Purpose","path":"/purpose"}},"allNavYaml":{"edges":[{"node":{"title":"Purpose","id":"purpose","items":null}},{"node":{"title":"Conventions Used","id":"conventions","items":null}},{"node":{"title":"Agile","id":"agile","items":[{"id":"bugs","title":"Bugs"},{"id":"confluence","title":"Confluence"},{"id":"jira","title":"Jira"}]}},{"node":{"title":"Principles","id":"principles","items":null}},{"node":{"title":"Standards","id":"standards","items":[{"id":"definitions","title":"Definitions of Done"},{"id":"ready","title":"Definitions of Ready"},{"id":"version-control","title":"Version Control"},{"id":"code-review","title":"Code Review/Pull Requests"},{"id":"design-review","title":"Technical Design Review"},{"id":"code-style","title":"Code Style"},{"id":"design-principles","title":"Design Principles"},{"id":"cloud","title":"Cloud"},{"id":"ci-cd","title":"CI/CD"},{"id":"versioning","title":"Versioning"},{"id":"api-standards","title":"API Standards"},{"id":"logging","title":"Logging"},{"id":"readme","title":"README"}]}},{"node":{"title":"Design Implementations","id":"design-implementations","items":[{"id":"application-info","title":"Application Info"}]}},{"node":{"title":"Security","id":"security","items":[{"id":"secure-code","title":"Secure Code Standards"},{"id":"static-code","title":"Static Code Analysis"},{"id":"software-composition","title":"Software Composition Analysis"},{"id":"credentials","title":"Credentials"},{"id":"security-training","title":"Security training"}]}},{"node":{"title":"Testing","id":"testing","items":[{"id":"test-driven-development","title":"Test-Driven Development"},{"id":"characteristics","title":"Characteristics of a Good Unit Test"},{"id":"test-driven-checklist","title":"Test-Driven Development Checklist"},{"id":"test-data","title":"Test Data"}]}},{"node":{"title":"Operational Excellence","id":"operational-excellence","items":[{"id":"ceremonies","title":"Ceremonies"},{"id":"standups","title":"Stand-ups"},{"id":"guilds","title":"Guilds"}]}},{"node":{"title":"People","id":"people","items":null}},{"node":{"title":"Software Engineering Checklist","id":"software-engineering-checklist","items":null}}]}},"pageContext":{"section":"playbook"}}