{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}}]},"markdownRemark":{"html":"<h1>Versioning</h1>\n<table>\n<thead>\n<tr>\n<th>REACH</th>\n<th>ALL</th>\n<th>BY DIVISION</th>\n<th>BY STACK</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>LEADS</td>\n<td>Head of Software Engineering</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Versioning is standardised across all applications in the group. We\nfollow the guidelines as set out in Semantic Versioning 2.0.0\n(<a href=\"https://semver.org\">https://semver.org</a>)</p>\n<p>Given a version number MAJOR.MINOR.PATCH, increment the:</p>\n<ol>\n<li>\n<p>MAJOR version when you make incompatible API changes,</p>\n</li>\n<li>\n<p>MINOR version when you add functionality in a backwards-compatible</p>\n<blockquote>\n<p>manner, and</p>\n</blockquote>\n</li>\n<li>\n<p>PATCH version when you make backwards-compatible bug fixes.</p>\n</li>\n</ol>\n<p>Additional labels for pre-release and build metadata are available as\nextensions to the MAJOR.MINOR.PATCH format.</p>","frontmatter":{"title":"Versioning","path":"/standards/versioning"}},"allNavYaml":{"edges":[{"node":{"title":"Purpose","id":"purpose","items":null}},{"node":{"title":"Conventions Used","id":"conventions","items":null}},{"node":{"title":"Agile","id":"agile","items":[{"id":"bugs","title":"Bugs"},{"id":"confluence","title":"Confluence"},{"id":"jira","title":"Jira"}]}},{"node":{"title":"Principles","id":"principles","items":null}},{"node":{"title":"Standards","id":"standards","items":[{"id":"definitions","title":"Definitions of Done"},{"id":"ready","title":"Definitions of Ready"},{"id":"version-control","title":"Version Control"},{"id":"code-review","title":"Code Review/Pull Requests"},{"id":"design-review","title":"Technical Design Review"},{"id":"code-style","title":"Code Style"},{"id":"design-principles","title":"Design Principles"},{"id":"cloud","title":"Cloud"},{"id":"ci-cd","title":"CI/CD"},{"id":"versioning","title":"Versioning"},{"id":"api-standards","title":"API Standards"},{"id":"logging","title":"Logging"},{"id":"readme","title":"README"}]}},{"node":{"title":"Design Implementations","id":"design-implementations","items":[{"id":"application-info","title":"Application Info"}]}},{"node":{"title":"Security","id":"security","items":[{"id":"secure-code","title":"Secure Code Standards"},{"id":"static-code","title":"Static Code Analysis"},{"id":"software-composition","title":"Software Composition Analysis"},{"id":"credentials","title":"Credentials"},{"id":"security-training","title":"Security training"}]}},{"node":{"title":"Testing","id":"testing","items":[{"id":"test-driven-development","title":"Test-Driven Development"},{"id":"characteristics","title":"Characteristics of a Good Unit Test"},{"id":"test-driven-checklist","title":"Test-Driven Development Checklist"},{"id":"test-data","title":"Test Data"}]}},{"node":{"title":"Operational Excellence","id":"operational-excellence","items":[{"id":"ceremonies","title":"Ceremonies"},{"id":"standups","title":"Stand-ups"},{"id":"guilds","title":"Guilds"}]}},{"node":{"title":"People","id":"people","items":null}},{"node":{"title":"Software Engineering Checklist","id":"software-engineering-checklist","items":null}}]}},"pageContext":{"section":"playbook"}}