{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"path":"/agile","title":"Agile"}}},{"node":{"frontmatter":{"path":"/agile/bugs","title":"Bugs"}}},{"node":{"frontmatter":{"path":"/people","title":"People"}}},{"node":{"frontmatter":{"path":"/agile/confluence","title":"Confluence"}}},{"node":{"frontmatter":{"path":"/agile/jira","title":"Jira"}}},{"node":{"frontmatter":{"path":"/operational-exellence/ceremonies","title":"Ceremonies"}}},{"node":{"frontmatter":{"path":"/operational-exellence/guilds","title":"Guilds"}}},{"node":{"frontmatter":{"path":"/operational-exellence/standups","title":"Stand-ups"}}},{"node":{"frontmatter":{"path":"/operational-exellence","title":"Operational Excellence"}}},{"node":{"frontmatter":{"path":"/security/credentials","title":"Credentials"}}},{"node":{"frontmatter":{"path":"/conventions","title":"Conventions Used"}}},{"node":{"frontmatter":{"path":"/software-eng-checklist","title":"Software Engineering Checklist"}}},{"node":{"frontmatter":{"path":"/security/secure-code","title":"Secure Code Standards"}}},{"node":{"frontmatter":{"path":"/security","title":"Security"}}},{"node":{"frontmatter":{"path":"/security/security-training","title":"Security training"}}},{"node":{"frontmatter":{"path":"/security/software-composition","title":"Software Composition Analysis"}}},{"node":{"frontmatter":{"path":"/security/static-code","title":"Static Code Analysis"}}},{"node":{"frontmatter":{"path":"/principles","title":"Principles"}}},{"node":{"frontmatter":{"path":"/standards/ci-cd","title":"CI/CD"}}},{"node":{"frontmatter":{"path":"/standards/api-standards","title":"API Standards"}}},{"node":{"frontmatter":{"path":"/standards/cloud","title":"Cloud"}}},{"node":{"frontmatter":{"path":"/standards/code-review","title":"Code Review/Pull Requests"}}},{"node":{"frontmatter":{"path":"/standards/code-style","title":"Code Style"}}},{"node":{"frontmatter":{"path":"/standards/definitions","title":"Definitions of Done"}}},{"node":{"frontmatter":{"path":"/standards/design-principles","title":"Design Principles"}}},{"node":{"frontmatter":{"path":"/standards/logging","title":"Logging"}}},{"node":{"frontmatter":{"path":"/standards/readme","title":"README"}}},{"node":{"frontmatter":{"path":"/standards/ready","title":"Definitions of Ready"}}},{"node":{"frontmatter":{"path":"/standards/design-review","title":"Technical Design Review"}}},{"node":{"frontmatter":{"path":"/standards/version-control","title":"Version Control"}}},{"node":{"frontmatter":{"path":"/standards","title":"Standards"}}},{"node":{"frontmatter":{"path":"/standards/versioning","title":"Versioning"}}},{"node":{"frontmatter":{"path":"/testing/characteristics","title":"Characteristics of a Good Unit Test"}}},{"node":{"frontmatter":{"path":"/testing/test-data","title":"Test Data"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-checklist","title":"Test-Driven Development Checklist"}}},{"node":{"frontmatter":{"path":"/testing/test-driven-development","title":"Test-Driven Development"}}},{"node":{"frontmatter":{"path":"/testing","title":"Testing"}}}]},"markdownRemark":{"html":"<h1>Bugs</h1>\n<p>Useful bug reports are ones that get bugs fixed. A useful bug report\nis...</p>\n<ol>\n<li>\n<p>Reproducible - If an Engineer can't see it or conclusively prove</p>\n<blockquote>\n<p>that it exists, the more likely it will be returned \"It works for\nme!\"</p>\n</blockquote>\n</li>\n<li>\n<p>Specific - The quicker the Engineer can trace down the issue to a</p>\n<blockquote>\n<p>specific problem, the more likely it'll be fixed expediently.</p>\n</blockquote>\n</li>\n</ol>\n<p>The goals of a bug report are to:</p>\n<ul>\n<li>\n<p>Pinpoint the bug</p>\n</li>\n<li>\n<p>Explain it to the QA team to triage</p>\n</li>\n</ul>\n<h3>How to write a good bug report</h3>\n<p>A good bug report should be brief but include the following information:</p>\n<p><strong>Summary</strong></p>\n<p>A brief summary of the issue</p>\n<p><strong>Steps to Reproduce</strong></p>\n<p>The goal of reproducible steps is to teach developer to recreate the bug\non his own system. It may be as simple as Load the attached test case in\nBrowser XYZ. A more complex case may involve multiple steps, such as:</p>\n<p><em>Step 1: Load the attached test case in Browser XYZ</em></p>\n<p><em>Step 2: Scroll to the bottom of the page</em></p>\n<p><em>Step 3: Click the link</em></p>\n<p>_Step 4: Page should show X but shows Y _</p>\n<p><strong>Expected Result</strong></p>\n<p>Detail what you expect the result to be.</p>\n<p><strong>Actual Result</strong></p>\n<p>A picture tells a thousand works and saves a lot of bug writing.\nAttached screenshots or record behaviour\n(e.g. <a href=\"http://recordit.co/\">http://recordit.co/</a>) to help\nquickly triage the issue.</p>\n<p><strong>Impact</strong></p>\n<p><strong>Scope:</strong></p>\n<p>A measure for how many people it affects, usually on a scale of 1 to 5.\nSo if everyone's completion rate is 5% higher than it should be, that\nwould be a 5, as it affects everyone. It's really good if you have some\ndescription for this, e.g.:</p>\n<ul>\n<li>\n<p>Level 1: Few reported cases</p>\n</li>\n<li>\n<p>Level 2: Affects a small sub-sector of users (&#x3C;20% or something)</p>\n</li>\n<li>\n<p>Level 3: Affects a medium sub-sector of users (20 - 50% ish)</p>\n</li>\n<li>\n<p>Level 4: Affects all posters OR all workers</p>\n</li>\n<li>\n<p>Level 5: Affects all users</p>\n</li>\n</ul>\n<p><strong>Severity:</strong></p>\n<p>A measure for how badly it affects the user and/or business. Potential\nscale could be:</p>\n<ul>\n<li>\n<p>Level 1: A typo (unlikely to have customer service impacts),</p>\n<blockquote>\n<p>duplicate notifications</p>\n</blockquote>\n</li>\n<li>\n<p>Level 2: Incorrect completion rate (some people might write in about</p>\n<blockquote>\n<p>it), discrepancy in task count</p>\n</blockquote>\n</li>\n<li>\n<p>Level 3: Something that is stopping people from messaging, making an</p>\n<blockquote>\n<p>offer, or assigning</p>\n</blockquote>\n</li>\n<li>\n<p>Level 4: Payments incorrectly processed, e.g. the bug from the other</p>\n<blockquote>\n<p>week</p>\n</blockquote>\n</li>\n<li>\n<p>Level 5: Whole site down/Armageddon</p>\n</li>\n</ul>\n<p>Under this, it's also important to note the impacts, for example:</p>\n<ul>\n<li>\n<p>Increased ticket volume</p>\n</li>\n<li>\n<p>Manual workaround uses up customer service time etc.</p>\n</li>\n<li>\n<p>Lost revenue</p>\n</li>\n<li>\n<p>Negative PR</p>\n</li>\n</ul>","frontmatter":{"title":"Bugs","path":"/agile/bugs"}}},"pageContext":{"section":"playbook"}}